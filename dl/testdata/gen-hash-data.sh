#!/bin/bash

SCRIPTPATH="$(
  cd -- "$(dirname "$0")" >/dev/null 2>&1
  pwd -P
)"

GO_GEN_HEADER="Code generated by testdata/gendata.sh DO NOT EDIT."
set -euo pipefail

echo "Hashes - MD5"
hash="$(md5sum "${SCRIPTPATH}"/checksum.txt | cut -d ' ' -f1)"
hash_mismatch="$(md5sum "${SCRIPTPATH}"/Dockerfile | cut -d ' ' -f1)"

echo "MD5 checksum data (GO)"

cat > "${SCRIPTPATH}/../hash_md5_data_test.go" << EOF
// $GO_GEN_HEADER
package dl

//Generated Hashes
const MD5_VALID = "$hash"
const MD5_MISMATCH = "$hash_mismatch"
const MD5_INVALID = "${hash:1}"

EOF

echo "MD5 checksum file (valid)"
echo "${hash}  testdata/checksum.txt" > "${SCRIPTPATH}"/MD5SUMS.txt

echo "MD5 checksum file (invalid-hash)"
echo "z${hash:1}  testdata/checksum.txt" > "${SCRIPTPATH}"/MD5SUMS.invalid.txt

echo "MD5 checksum file (missing-file)"
echo "${hash}  testdata/missing.txt" > "${SCRIPTPATH}"/MD5SUMS.missing.txt

echo "MD5 checksum file (mismatch-file)"
echo "${hash_mismatch}  testdata/checksum.txt" > "${SCRIPTPATH}"/MD5SUMS.mismatch.txt

echo "MD5 only checksum in a file (valid)"
printf "%s" "${hash}" > "${SCRIPTPATH}"/MD5SUMS.hash.txt

echo "MD5 only checksum in a file with newline(s) - (valid)"
printf "%s\n" "${hash}" > "${SCRIPTPATH}"/MD5SUMS.hash.lf-1.txt
printf "%s\n\n" "${hash}" > "${SCRIPTPATH}"/MD5SUMS.hash.lf-2.txt
printf "%s\r" "${hash}" > "${SCRIPTPATH}"/MD5SUMS.hash.cr-1.txt

echo "MD5 only checksum in a file (invalid-hash)"
printf "z%s" "${hash:1}  testdata/checksum.txt" > "${SCRIPTPATH}"/MD5SUMS.hash.invalid.txt

echo "MD5 only checksum in a file (mismatched)"
printf "%s" "${hash_mismatch}" > "${SCRIPTPATH}"/MD5SUMS.hash.mismatch.txt

echo "Hashes - SHA1"
hash="$(sha1sum "${SCRIPTPATH}"/checksum.txt | cut -d ' ' -f1)"
hash_mismatch="$(sha1sum "${SCRIPTPATH}"/Dockerfile | cut -d ' ' -f1)"

echo "SHA1 checksum file (valid)"
echo "${hash}  testdata/checksum.txt" > "${SCRIPTPATH}"/SHA1SUMS.txt

echo "SHA1 checksum file (invalid-hash)"
echo "z${hash:1}  testdata/checksum.txt" > "${SCRIPTPATH}"/SHA1SUMS.invalid.txt

echo "SHA1 checksum file (missing-file)"
echo "${hash}  testdata/missing.txt" > "${SCRIPTPATH}"/SHA1SUMS.missing.txt

echo "SHA1 checksum file (mismatch-file)"
echo "${hash_mismatch}  testdata/checksum.txt" > "${SCRIPTPATH}"/SHA1SUMS.mismatch.txt


echo "SHA1 only checksum in a file (valid)"
printf "%s" "${hash}" > "${SCRIPTPATH}"/SHA1SUMS.hash.txt

echo "SHA1 only checksum in a file with newline(s) - (valid)"
printf "%s\n" "${hash}" > "${SCRIPTPATH}"/SHA1SUMS.hash.lf-1.txt
printf "%s\n\n" "${hash}" > "${SCRIPTPATH}"/SHA1SUMS.hash.lf-2.txt
printf "%s\r" "${hash}" > "${SCRIPTPATH}"/SHA1SUMS.hash.cr-1.txt

echo "SHA1 only checksum in a file (invalid-hash)"
printf "z%s" "${hash:1}  testdata/checksum.txt" > "${SCRIPTPATH}"/SHA1SUMS.hash.invalid.txt

echo "SHA1 only checksum in a file (mismatched)"
printf "%s" "${hash_mismatch}" > "${SCRIPTPATH}"/SHA1SUMS.hash.mismatch.txt

echo "SHA1 checksum data (GO)"

cat > "${SCRIPTPATH}/../hash_sha1_data_test.go" << EOF
// $GO_GEN_HEADER
package dl

//Generated Hashes
const SHA1_VALID = "$hash"
const SHA1_MISMATCH = "$hash_mismatch"
const SHA1_INVALID = "${hash:1}"

EOF

echo "Hashes - SHA256"
hash="$(sha256sum "${SCRIPTPATH}"/checksum.txt | cut -d ' ' -f1)"
hash_mismatch="$(sha256sum "${SCRIPTPATH}"/Dockerfile | cut -d ' ' -f1)"

echo "SHA256 checksum file (valid)"
echo "${hash}  testdata/checksum.txt" > "${SCRIPTPATH}"/SHA256SUMS.txt

echo "SHA256 checksum file (invalid-hash)"
echo "z${hash:1}  testdata/checksum.txt" > "${SCRIPTPATH}"/SHA256SUMS.invalid.txt

echo "SHA256 checksum file (missing-file)"
echo "${hash}  testdata/missing.txt" > "${SCRIPTPATH}"/SHA256SUMS.missing.txt

echo "SHA256 checksum file (mismatch-file)"
echo "${hash_mismatch}  testdata/checksum.txt" > "${SCRIPTPATH}"/SHA256SUMS.mismatch.txt

echo "SHA256 only checksum in a file (valid)"
printf "%s" "${hash}" > "${SCRIPTPATH}"/SHA256SUMS.hash.txt

echo "SHA256 only checksum in a file with newline(s) - (valid)"
printf "%s\n" "${hash}" > "${SCRIPTPATH}"/SHA256SUMS.hash.lf-1.txt
printf "%s\n\n" "${hash}" > "${SCRIPTPATH}"/SHA256SUMS.hash.lf-2.txt
printf "%s\r" "${hash}" > "${SCRIPTPATH}"/SHA256SUMS.hash.cr-1.txt

echo "SHA256 only checksum in a file (invalid-hash)"
printf "z%s" "${hash:1}  testdata/checksum.txt" > "${SCRIPTPATH}"/SHA256SUMS.hash.invalid.txt

echo "SHA256 only checksum in a file (mismatched)"
printf "%s" "${hash_mismatch}" > "${SCRIPTPATH}"/SHA256SUMS.hash.mismatch.txt

echo "SHA256 checksum data (GO)"

cat > "${SCRIPTPATH}/../hash_sha256_data_test.go" << EOF
// $GO_GEN_HEADER
package dl

//Generated Hashes
const SHA256_VALID = "$hash"
const SHA256_MISMATCH = "$hash_mismatch"
const SHA256_INVALID = "${hash:1}"

EOF

echo "Hashes - SHA512"
hash="$(sha512sum "${SCRIPTPATH}"/checksum.txt | cut -d ' ' -f1)"
hash_mismatch="$(sha512sum "${SCRIPTPATH}"/Dockerfile | cut -d ' ' -f1)"

echo "SHA512 checksum file (valid)"
echo "${hash}  testdata/checksum.txt" > "${SCRIPTPATH}"/SHA512SUMS.txt

echo "SHA512 checksum file (invalid-hash)"
echo "z${hash:1}  testdata/checksum.txt" > "${SCRIPTPATH}"/SHA512SUMS.invalid.txt

echo "SHA512 checksum file (missing-file)"
echo "${hash}  testdata/missing.txt" > "${SCRIPTPATH}"/SHA512SUMS.missing.txt

echo "SHA512 checksum file (mismatch-file)"
echo "${hash_mismatch}  testdata/checksum.txt" > "${SCRIPTPATH}"/SHA512SUMS.mismatch.txt

echo "SHA512 only checksum in a file (valid)"
printf "%s" "${hash}" > "${SCRIPTPATH}"/SHA512SUMS.hash.txt

echo "SHA512 only checksum in a file with newline(s) - (valid)"
printf "%s\n" "${hash}" > "${SCRIPTPATH}"/SHA512SUMS.hash.lf-1.txt
printf "%s\n\n" "${hash}" > "${SCRIPTPATH}"/SHA512SUMS.hash.lf-2.txt
printf "%s\r" "${hash}" > "${SCRIPTPATH}"/SHA512SUMS.hash.cr-1.txt

echo "SHA512 only checksum in a file (invalid-hash)"
printf "z%s" "${hash:1}  testdata/checksum.txt" > "${SCRIPTPATH}"/SHA512SUMS.hash.invalid.txt

echo "SHA512 only checksum in a file (mismatched)"
printf "%s" "${hash_mismatch}" > "${SCRIPTPATH}"/SHA512SUMS.hash.mismatch.txt

echo "SHA512 checksum data (GO)"

cat > "${SCRIPTPATH}/../hash_sha512_data_test.go" << EOF
// $GO_GEN_HEADER
package dl

//Generated Hashes
const SHA512_VALID = "$hash"
const SHA512_MISMATCH = "$hash_mismatch"
const SHA512_INVALID = "${hash:1}"

EOF
